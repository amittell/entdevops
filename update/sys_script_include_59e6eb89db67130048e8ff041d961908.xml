<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_entdevops.calculate_commiter_scores</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>calculate_commiter_scores</name>
        <script><![CDATA[var calculate_commiter_scores = Class.create();
calculate_commiter_scores.prototype = {
	initialize: function() {
		var commiters = [];
		var commiter;
		var score;
		var reverts = 0;
		var total_commits;
		var revert_rate;
		var success_rate;
		var total_files = 0;
		var average_files = 0;
		var average_changes = 0;
		var total_changes = 0;
		var gr = new GlideRecord('x_snc_entdevops_scm_commits');
		gr.addEncodedQuery('commit_date>=javascript:gs.beginningOfLast30Days()');
		gr.query();
		while (gr.next()) {
			commiters.push(""+gr.commiter);
		}
		
		commiters = commiters.filter(function(item, i, ar){ return ar.indexOf(item) === i; });
			
			for (i = 0; i < commiters.length; i++) {
				var gx = new GlideRecord('x_snc_entdevops_scm_commits');
				gx.addEncodedQuery("commit_date>=javascript:gs.beginningOfLast30Days()^commiter="+commiters[i]);
				gx.query();
				total_commits = gx.getRowCount();
				while(gx.next()){
					if(gx.revert){
						reverts++;
					}
					total_changes += gx.total_changes;
					
					var cfGr = new GlideRecord ('x_snc_entdevops_scm_commit_files');
					cfGr.addQuery('commit',gx.sys_id);
					cfGr.query();
					while(cfGr.next()) {
						total_files++;
					}
					
				}
				var commiterGr = new GlideRecord('x_snc_entdevops_scm_commiters');
				commiterGr.addQuery('commiter',commiters[i]);
				commiterGr.query();
				commiterGr.next();
				commiter = commiterGr.sys_id;
				
				revert_rate = (reverts / total_commits) * 100;
				success_rate = 100 - revert_rate;
				score = 100 - (revert_rate*2);
				average_changes = total_changes / total_commits;
				average_files = total_files / total_commits;
				var gt = new GlideRecord('x_snc_entdevops_commiter_score');
				gt.addQuery('scm_commiter.commiter', commiters[i]);
				gt.query();
				if (gt.next()) {
					gt.commit_rate = total_commits;
					gt.commit_revert_rate = revert_rate.toFixed(2);
					gt.commit_success_rate = success_rate.toFixed(2);
					gt.commit_score = score.toFixed(2);
					gt.average_files_changed = average_files.toFixed(2);
					gt.average_commit_size = average_changes.toFixed(2);
					gt.update();
				} else {
					if (commiter) {
						gt.scm_commiter = commiter;
						gt.commit_rate = total_commits;
						gt.commit_revert_rate = revert_rate.toFixed(2);
						gt.commit_success_rate = success_rate.toFixed(2);
						gt.commit_score = score.toFixed(2);
						gt.average_files_changed = average_files.toFixed(2);
						gt.average_commit_size = average_changes.toFixed(2);
						gt.insert();
					}
				}
			}
		},
		type: 'calculate_commiter_scores'
	};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-07-25 17:27:52</sys_created_on>
        <sys_id>59e6eb89db67130048e8ff041d961908</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>calculate_commiter_scores</sys_name>
        <sys_package display_value="entdevops" source="x_snc_entdevops">86b561e0dba7930048e8ff041d9619c9</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="entdevops">86b561e0dba7930048e8ff041d9619c9</sys_scope>
        <sys_update_name>sys_script_include_59e6eb89db67130048e8ff041d961908</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-07-25 19:07:15</sys_updated_on>
    </sys_script_include>
</record_update>
